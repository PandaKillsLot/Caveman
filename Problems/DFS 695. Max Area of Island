class Solution {
/**
* 695. Max Area of Island
* https://leetcode.com/problems/max-area-of-island/description/
* pro: 0, 1矩阵, 求岛的最大面积
* tag: dfs, search
* sol: dfs/ bfs 搜索每一个岛屿做比较
* mis:  
* fol:
* oth:
*/
    int max = 0;
    int area = 0;
    public int maxAreaOfIsland(int[][] grid) {
        if(grid == null || grid.length == 0){
            return 0;
        }
        for (int i = 0; i < grid.length; i++){
            for (int j = 0; j < grid[0].length; j++){
                if (grid[i][j] == 1){
                    area = 0;
                    dfs(grid, i, j); 
                }
            } 
        }
        return max;
    }
    // compare current area with max
    private void dfs(int[][] grid, int x, int y){
        if (isValid(grid, x, y)){
            max = Math.max(max, ++area);
            grid[x][y] = 0;
        } else {
            return;
        }
        int[] dx = {1, -1, 0, 0};
        int[] dy = {0, 0, 1, -1};
        
        for (int i = 0; i < 4; i++){
            dfs(grid, x + dx[i], y + dy[i]);
        }
    }
    private boolean isValid(int[][] grid, int x, int y){
        return x >= 0 && x < grid.length && y >= 0 && y < grid[0].length && grid[x][y] == 1;
    }
    
}
