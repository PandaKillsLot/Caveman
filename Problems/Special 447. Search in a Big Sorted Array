public class Solution {
    /**
     * 447. Search in a Big Sorted Array
     * https://www.lintcode.com/problem/search-in-a-big-sorted-array/description
     * pro： 无线大数组找数
     * tag： bs， 倍增
     * solu：倍增找上界，bs找数 log target + log (upper - lower)
     * follow：
     * 
     * @param reader: An instance of ArrayReader.
     * @param target: An integer
     * @return: An integer which is the first index of target.
     
     @ 倍增法：
    小技巧从 1 开始乘以 2 ， 从 （1 － 1）开始取，可以拿概括所有数
     */
    public int searchBigSortedArray(ArrayReader reader, int target) {
        // write your code here
        if (reader == null) {
            return -1;
        }
        
        int step = 1;
        
        // 从零开始啊，智障
        
        while (reader.get(step - 1) < target) {
            step = step * 2;
        }
        
        int head = step / 2;
        
        int tail = step;
        
        while (head + 1 < tail) {
            int mid = (head + tail) / 2;
            // find or the first index
            if (reader.get(mid) == target) {
                tail = mid;
            } else if (reader.get(mid) < target) {
                head = mid;
            } else {
                tail  = mid;
            }
        }
        
        if (reader.get(head) == target){ 
            return head;
        }
        if (reader.get(tail) == target) {
            return tail;
        }
        
        return -1;
        
    }
}
