/**
* 849. Maximize Distance to Closest Person
* https://leetcode.com/problems/maximize-distance-to-closest-person/description/
* pro: 公交上有空位, 一定有个人坐着, 求和里面人相对距离最远的座位
* tag: 双指针
* sol: 三种情况, 中间两个11隔着, 左右两头, 分别算下
* mis:  
* fol:
* oth:
*/

class Solution {
    public int maxDistToClosest(int[] seats) {
        if (seats == null || seats.length == 0){
            return 0;
        }
        int max = 0;
        int len = 0;
        int headLen = 0;
        int j = 0;
        while (j < seats.length && seats[j] != 1){
            headLen++;
            j++;
        }
        for (int i = j; i < seats.length; i++){
            if (seats[i] == 1){
                max = Math.max(max, len);
                len = 0;
            } else {
                len++;
            }
        }
        //System.out.println(max);


        if (max % 2 == 0){
            max = max / 2;
        } else {
            max =  max / 2 + 1;
        }
        return Math.max(len, Math.max(max, headLen));
    }
}
