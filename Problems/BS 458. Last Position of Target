public class Solution {
    /**458. Last Position of Target
     * pro：458. Last Position of Target
     * tag：BS
     * solution：二分
     * https://www.lintcode.com/problem/last-position-of-target/description
     * @param nums: An integer array sorted in ascending order
     * @param target: An integer
     * @return: An integer
     */
    public int lastPosition(int[] nums, int target) {
        // write your code here
        if (nums == null || nums.length == 0) {
            return -1;
        }
        
        int start = 0;
        
        int end = nums.length -1;
        
        while (start + 1 < end) {
            
            int mid = (start + end) / 2;
            
            // equals always worth an if 
            if (nums[mid] == target) {
                start = mid;
            } else  if (nums[mid] < target) {
                start = mid;
            } else {
                end = mid;
            }
        }
        if (nums[end] == target) {
            return end;
        }
        if (nums[start] == target) {
            return start;
        }
        

        return -1;
        
    }
}
