class Solution {
    /**
     * 413.Arithmetic Slices
     * https://leetcode.com/problems/arithmetic-slices/description/
     * pro: 求一个数组里有多少个subarray是等差数列
     * tag: Math
     * sol: 1) 判断等差数列的条件: A[i - 2] + A[i] == A[i - 1] * 2 必要充分条件
                                 sum = (head + end) * n / 2       必要不充分, 1,3,2 也满足
            2) [1,2,3,4,5] 里的数组个数, 5-1, 4-2, 3-3 
            维护两个变量,一个是当前的数组里等差个数 count = 1 +...+ n, 一个是全局 sum
     * mis: 误认为能用等差数列判断
     * fol:
     * oth:
     */
    public int numberOfArithmeticSlices(int[] A) {
        if (A == null || A.length < 3){
            return 0;
        }
        int count = 0;
        int sum = 0;
        for (int i = 2; i < A.length; i++){
            if (A[i - 2] + A[i] == A[i - 1] * 2){
                count++;
                sum += count;
            }else {
                count = 0;
            }
        }
        
        return sum;
    }
}
