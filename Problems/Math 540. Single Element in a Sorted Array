class Solution {
/**
* 540. Single Element in a Sorted Array
* https://leetcode.com/problems/single-element-in-a-sorted-array/description/
* pro: 求一个数里只出现过一次的数(其他都刚好出现了两次)
* tag: array, Math
* sol: 这种题目, 一定是target和下标有关, 类似于, 谷歌的, 一个数组长度是 n, 有数出现了超过 n/4次, 求这个数, 把 1/4 2/4 3/4 4/4 查一遍
* mis:  
* fol:
* oth:
*/
    //https://dyang2016.wordpress.com/2016/11/05/362-design-hit-counter/
    public int singleNonDuplicate(int[] nums) {
        int start = 0;
        int end = nums.length;
        if (nums.length % 2 == 0){
            return -1;
        }
        while (start + 1 < end){
            int mid = (start + end) / 2;
            int flag = check(mid, nums);
            if (flag == 0){
                return nums[mid];
            } else if (flag == 1){
                end = mid;
            } else {
                start = mid;
            }
        }
        if (check(start, nums) == 0){
            return nums[start];
        }
        if (check(end, nums) == 0){
            return nums[end];
        }
        //System.out.println("?");
        return -1;
    }
    private int check(int i, int[] nums){
        int head = -1;
        if (i - 1 >= 0 && nums[i] == nums[i - 1]){
            head = i - 1;
        } else if (i + 1 < nums.length && nums[i] == nums[i + 1]){
            head = i;
        } else {
            return 0;
        }
        if (head % 2 == 0){
            return -1;
        } else {
            return 1;
        }
    }
    
}
