class Solution {
    public String multiply(String num1, String num2) {
        // corner case
    /**
     * 43. Multiply Strings
     * https://leetcode.com/problems/multiply-strings/description/
     * pro: 用string表示的大位数字相乘
     * tag: String math
     * sol: 数字的进位表示 + 合并两个序列 + 开个 m + n的 大数组放
     * mis: char -> int : int(char - '0') || int -> char : char(int + '0')
     * fol:
     * oth:
     */
        if (num1 == null || num2 == null) {
            return null;
        }   
        int[] arr_sum = new int[num1.length() + num2.length()];
        int pointer = 0;
        for (int i = num1.length() - 1; i >= 0; i--){
            for(int j = num2.length() - 1; j >= 0; j--){
                int sum = arr_sum[i + j + 1] + Integer.valueOf(num1.charAt(i) - '0') * Integer.valueOf(num2.charAt(j) - '0');
                arr_sum[i + j + 1] = sum % 10;
                arr_sum[i + j] += sum / 10;
            }
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < arr_sum.length; i++){  
            if(arr_sum[i] == 0){
                pointer++;
            } else {
                break;
            }
        }
        
        for (int i = pointer; i < arr_sum.length; i++){  
            sb.append(arr_sum[i]);
        }
        return sb.length() < 1 ? "0" : sb.toString();
    }
}
