public class Solution {
    /**
     * @param prices: Given an integer array
     * @return: Maximum profit
     */
/**
* 150. Best Time to Buy and Sell Stock II
* https://www.lintcode.com/problem/best-time-to-buy-and-sell-stock-ii/description
* pro: 买卖无限次,求最大值
* tag: dp 
* sol: 累计每一点正的差值(每一天, 每一个正数), 
*      Space O()
*      Time  O()
* 
* mis:  
* fol:
* oth:
*/
    public int maxProfit(int[] prices) {
        // write your code here
        // 抓住每一个波动, 而不是唯一的最大点
        int sum = 0;
        for (int i = 1; i < prices.length; i++) {
            int profit = prices[i] - prices[i - 1];
            if (profit > 0){
                sum += profit;
            }
        }
        return sum;
    }
}
