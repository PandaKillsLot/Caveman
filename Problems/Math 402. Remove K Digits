/**
* 402. Remove K Digits
* https://leetcode.com/problems/remove-k-digits/description/
* pro: 一个数字, 删掉几个, 使这个数最小
* tag: data structure, Math, Monostack
* sol: 固定的数列排列出最小数, 单调递增 -> 不能改变顺序? 保证前面是单调递增的 + stack (单调栈)
* mis:  
* fol:
* oth:
*/
class Solution {
    public String removeKdigits(String num, int k) {
        // 每次拿走最大的数(位数总是减一的)
        Stack<Character> stack = new Stack<>();
        for (int i = 0; i < num.length(); i++){
            while (!stack.isEmpty() && k > 0 && stack.peek() > num.charAt(i)){
                stack.pop();
                k--;
            }
            stack.push(num.charAt(i));
        }
        while (k > 0 && !stack.isEmpty()){
            stack.pop();
            k--;
        }
        StringBuilder sb = new StringBuilder();
        while (!stack.isEmpty()){
            sb.append(stack.pop());
        }
        String ans = sb.reverse().toString();
        int pointer = 0;
        while (pointer < ans.length() && ans.charAt(pointer) == '0'){
            pointer++;
        }
        return ans.substring(pointer).length() > 0 ? ans.substring(pointer) : "0";
    }
}
